{"version":3,"sources":["components/contactForm/ContactFormStyled.js","components/contactForm/ContactForm.js","components/contactList/ContactListStyled.js","components/contactList/contactListItem/ContactListItem.js","components/contactList/ContactList.js","components/filter/FilterStyled.js","components/filter/Filter.js","components/AppStyled.js","components/App.js","index.js"],"names":["Form","styled","form","Input","input","Button","button","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","this","onSubmit","type","placeholder","onChange","Component","List","ul","DelButton","ContactListItem","contact","id","onDeleteContact","data-id","onClick","ContactList","contacts","map","FilterWrapper","div","FilterInput","Filter","onChangeFilter","Container","App","filter","changeFilter","getFilteredContacts","toLowerCase","includes","addContact","uuidv4","alert","prevState","find","deleteContact","contactId","dataset","filteredContacts","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87ceb337.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Form = styled.form`\r\n  margin: 30px 0;\r\n  padding: 20px;\r\n  border: 1px solid #555555;\r\n  border-radius: 3px;\r\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\r\n    1px 4px 6px rgba(0, 0, 0, 0.16);\r\n\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 5px 10px;\r\n  margin: 5px 0 20px 0;\r\n  width: 100%;\r\n  border: 2px solid #ccc;\r\n  border-radius: 4px;\r\n  background-color: white;\r\n  box-shadow: 0 0 15px 4px rgba(0, 0, 0, 0.06);\r\n  outline-color: #555555;\r\n\r\n  &::placeholder {\r\n    font-size: 14px;\r\n    color: #d8d8d8;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  color: black;\r\n  border: 1px solid #555555;\r\n  border-radius: 5px;\r\n  padding: 5px 30px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  cursor: pointer;\r\n  background-color: #d3d3d3;\r\n\r\n  â€ƒ &:hover {\r\n    background-color: #555555;\r\n    color: white;\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Form, Input, Button} from \"./ContactFormStyled\"\r\n\r\nexport default class ContactForm extends Component {\r\n  \r\n  static propTypes = { onAddContact: PropTypes.func.isRequired };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    this.props.onAddContact(name, number);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"Enter your name\"\r\n            onChange={this.handleChange}\r\n          ></Input>\r\n        </label>\r\n        <label>\r\n          Number\r\n          <Input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            placeholder=\"123-45-678\"\r\n            onChange={this.handleChange}\r\n          ></Input>\r\n        </label>\r\n        <Button type=\"submit\">Add contact</Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n","import styled from \"styled-components\";\r\nimport {Button} from \"../contactForm/ContactFormStyled\"\r\n\r\nexport const List = styled.ul`\r\n  li {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px 15px;\r\n    background-color: white;\r\n    border: 1px solid #555555;\r\n    border-radius: 3px;\r\n\r\n    &:not(:last-child) {\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DelButton = styled(Button)`\r\n  padding: 3px 10px;\r\n`;\r\n","import React from \"react\";\r\nimport {DelButton} from \"../ContactListStyled\"\r\n\r\nconst ContactListItem = ({ contact:{id, name, number}, onDeleteContact}) => (\r\n  <li>\r\n    <p>\r\n      {name}: {number}\r\n    </p>\r\n    <DelButton type=\"button\" data-id={id} onClick={onDeleteContact}>Delete</DelButton>\r\n  </li>\r\n);\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport ContactListItem from \"./contactListItem/ContactListItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport {List} from \"./ContactListStyled\"\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <List>\r\n      {contacts.map((contact) => (\r\n        <ContactListItem\r\n          key={contact.id}\r\n          contact={contact}\r\n          onDeleteContact={onDeleteContact}\r\n        />\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import styled from \"styled-components\";\r\nimport { Input } from \"../contactForm/ContactFormStyled\";\r\n\r\nexport const FilterWrapper = styled.div`\r\n  margin: 0 0 30px ;\r\n`;\r\n\r\nexport const FilterInput = styled(Input)`\r\n  margin: 5px 0 0;\r\n`;\r\n\r\n\r\n","import React from \"react\";\r\nimport { FilterWrapper, FilterInput} from \"./FilterStyled\"\r\n\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <FilterWrapper>\r\n      <label>\r\n        Find contacts by name\r\n      <FilterInput\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChangeFilter}\r\n        placeholder=\"Search...\"\r\n      ></FilterInput>\r\n      </label>\r\n    </FilterWrapper>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  width: 50%;\r\n  margin: 0 auto;\r\n\r\n  h2 {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactForm from \"./contactForm/ContactForm\";\nimport ContactList from \"./contactList/ContactList\";\nimport Filter from \"./filter/Filter\";\nimport { Container } from \"./AppStyled\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n\n    filter: \"\",\n  };\n\n  changeFilter = (e) => {\n    const { value } = e.target;\n    this.setState({ filter: value });\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  addContact = (name, number) => {\n    const contact = { id: uuidv4(), name, number };\n\n    if (!name || !number) {\n      return alert(\"Please enter some contact information.\");\n    }\n\n    this.setState((prevState) => {\n      return prevState.contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n      )\n        ? alert(`${name} is already in contacts.`)\n        : { contacts: [...prevState.contacts, contact] };\n    });\n  };\n\n  deleteContact = (e) => {\n    const contactId = e.target.dataset.id;\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm onAddContact={this.addContact} />\n\n        <h2>Contacts</h2>\n        {contacts.length > 1 && (\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        )}\n\n        {contacts.length > 0 ? (\n          <ContactList\n            contacts={filteredContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        ) : (\n          <p>There are no contacts in current list.</p>\n        )}\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./base.css\";\n\n ReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}